---
layout: page
title: Installing VIM on Linux
---

<em>by <a href="../../nathan/">Nathan Wallace</a></em> (Oct 28, 1999)

<p>

<h2>Introduction</h2>

These instructions describe the installation of <a href="http://www.vim.org">Vi IMproved</a> on Linux.  They were written specifically using VIM 5.5 on <a href="http://www.redhat.com">Red Hat</a> 6.1.

<p>

Installing VIM is the first thing I do on any computer since it increases my productivity dramatically.

<p>

<h2>Getting VIM</h2>

<ol>

<li>You need to perform this installation as root.  You can install VIM locally for your own use, but I like to make it available to all users on the machine.
<pre>
    su root
</pre>

<p>

<li>I put all my downloads in /usr/local/download.  You might need to create that directory now:
<pre>
    mkdir /usr/local/download
</pre>

<p>

<li>Now we can get VIM from your <a href="http://www.vim.org/download.html">nearest mirror</a>.  You need to get 2 files, <a href="ftp://ftp.vim.org/pub/editors/vim/unix/vim-5.5-rt.tar.gz">vim-5.5-rt.tar.gz</a> and <a href="ftp://ftp.vim.org/pub/editors/vim/unix/vim-5.5-src.tar.gz">vim-5.5-src.tar.gz</a>.  Here are the ftp commands:
<pre>
    cd /usr/local/download
    ftp ftp.vim.org
    cd pub
    cd editors
    cd vim
    cd unix
    bin
    get vim-5.5-rt.tar.gz
    get vim-5.5-src.tar.gz
    bye
</pre>

</ol>

<p>

<h2>Installing VIM</h2>

<ol>

<li>First we must unpack the distribution.  Don't be scared by this fairly powerful tar command, it just unzips and extracts the tar into /usr/local (..).
<pre>
    tar xzf vim-5.5-rt.tar.gz -C ..
    tar xzf vim-5.5-src.tar.gz -C ..
</pre>

<p>

<li>Create a link to the vim version for convenience:
<pre>
    cd ..
    ln -s vim5.5 vim
</pre>

<p>

<li>Now we can compile VIM:
<pre>
    cd vim
    cd src
    make
</pre>

<p>

<li>And install the VIM binaries in your path:
<pre>
    make install
</pre>

<p>

<li>You can check that the installation worked by typing:
<pre>
    gvim
</pre>

<p>

<li>Remember that VIM can be used in the graphical mode like above or in a console using:
<pre>
    vim
</pre>

<li>If you are new to VI and VIM then you should probably work through the tutorial:
<pre>
    vimtutor
</pre>

</ol>

<p>

<h2>Running the New Version</h2>

<ol>

<li>Just about every unix system has vi installed.  On Red Hat, vi is just vim running in compatible mode (ie: lots of features turned off).  Depending on how your original system was configured you may still be using an old version of vim, not the freshly installed one.  My system has vi installed as:
<pre>
    /bin/vi
</pre>
This is actually version 5.4 of vim (you can tell by executing :version or looking at the startup screen).  I changed it to use the new version by doing this:
<pre>
    cd /bin
    mv vi vi.old
    ln -s /usr/local/bin/vim vi
</pre>

<p>

<li>You may also like to check that the newly installed programs are the ones being run.  If there is an old version before the new one in the system path then it will be executed.  You can see the location of an executable on the path with the which command:
<pre>
    which vim
</pre>
On my system this returns the new version:
<pre>
    /usr/local/vim/vim
</pre>

</ol>

<p>

<h2>Setting Up Your VIM Environment</h2>

<ol>

<li>You can configure your VIM options through an initialization file.  For more information about this in VIM type:
<pre>
    :help vimrc
</pre>

<p>

<li>I like to use the following options:
<pre>
    set nowrap
    set tabstop=4
    set shiftwidth=4
    set smartindent
    set expandtab
    map Y y$
    set bs=indent
    set ruler
    " Switch syntax highlighting on, when the terminal has colors
    " Also switch on highlighting the last used search pattern.
    if has("gui_running")
      syntax on
      set hlsearch
    endif
</pre>
These basically just set up tabs to work as 4 spaces, turns on autoindenting, changes Y to yank the rest of the current line and turns on syntax highlighting only when we are in gui mode.

<p>

<li>The options above need to be saved into a file.  I want them available to all accounts (since only I use the machine) so I put them in the global location:
<pre>
    /usr/local/vim/vimrc
</pre>

<p>

<li>If you want settings specific to a certain user then create a config file in their home directory.  For example:
<pre>
    /home/nathan/.vimrc
</pre>

</ol>
